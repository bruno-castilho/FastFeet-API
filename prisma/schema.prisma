// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  DELIVERY_PERSON
}

model User {
  id       String @id @default(uuid())
  firstName     String
  lastName    String 
  cpf String @unique
  email    String @unique
  password String

  role UserRole @default(DELIVERY_PERSON)

  packagesDelivered     Packages[]

  @@map("users")
}

model Recipient {
  id       String @id @default(uuid())
  firstName     String
  lastName    String 
  email String @unique
  phone String
  cep String
  streetAddress String
  number  Int
  complement String?
  neighborhood String
  city String
  state String
  country String
  latitude Float
  longitude Float

  packages     Packages[]

  @@map("recipient")
}


enum PackageState {
  CREATED
  PENDING
  PICKEDUP
  DELIVERED
  RETURNED
}

model Packages {
  id       String @id @default(uuid())
  heightInCentimeters     Int
  widthInCentimeters    Int 
  weightInGrams Int
  state PackageState @default(CREATED)
  createdAt DateTime @default(now())
  postedAt DateTime?
  pickedUpAt DateTime?
  deliveredAt DateTime?
  returnedAt DateTime?
  recipientId String
  deliveredBy String?

  recipient      Recipient         @relation(fields: [recipientId], references: [id])
  deliveredPerson      User?         @relation(fields: [deliveredBy], references: [id])


  @@map("packages")
}




